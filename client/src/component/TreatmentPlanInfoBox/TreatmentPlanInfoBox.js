// Modules
import { useState } from 'react';

// Styling sheet
import './TreatmentPlanInfoBox.css';

// Components
import ErrorBox from '../ErrorBox/ErrorBox';
import SkeletonUI from '../SkeletonUI/SkeletonUI';

// Hooks
import useGetLatestTreatmentPlanPatient from '../../hook/useGetLatestTreatmentPlanPatient';

function TreatmentPlanInfoBox({ user }) {
    const [loading, setLoading] = useState(false);
    const [error, setError] = useState(null);

    const {
        treatmentPlan
    } = useGetLatestTreatmentPlanPatient({ setError, setLoading, patientId: user.UserId });

    return (
        <div className='treatment-plan-info-box'>
            {loading && <SkeletonUI />}
            {error && <ErrorBox error={error} setError={setError} />}

            {!loading && !error && treatmentPlan && (
                <>
                    <h2>üìã Th√¥ng tin ph√°c ƒë·ªì ƒëi·ªÅu tr·ªã</h2>

                    <div className="section">
                        <h3>üßë‚Äç‚öïÔ∏è Th√¥ng tin chung</h3>
                        <p><strong>Ng√†y t·∫°o:</strong> {new Date(treatmentPlan.date).toLocaleString('vi-VN')}</p>
                        <p><strong>Ghi ch√∫:</strong> {treatmentPlan.notes || 'Kh√¥ng c√≥'}</p>
                    </div>

                    <div className="section">
                        <h3>üíä Th√¥ng tin ph√°c ƒë·ªì</h3>
                        <p><strong>T√™n ph√°c ƒë·ªì:</strong> {treatmentPlan.regimenName}</p>
                        <p><strong>Lo·∫°i:</strong> {treatmentPlan.regimenType}</p>
                        <p><strong>Th·ªùi gian s·ª≠ d·ª•ng:</strong> {treatmentPlan.regimenDuration}</p>
                        <p><strong>Ch·ªâ ƒë·ªãnh:</strong> {treatmentPlan.regimenIndications}</p>
                        <p><strong>T√°c d·ª•ng ph·ª•:</strong> {treatmentPlan.regimenSideEffects}</p>
                        <p><strong>Ch·ªëng ch·ªâ ƒë·ªãnh:</strong> {treatmentPlan.regimenContraindications}</p>
                    </div>

                    <div className="section">
                        <h3>‚è∞ Nh·∫Øc u·ªëng thu·ªëc</h3>

                        {treatmentPlan.pillRemindTimes?.length > 0 ? (
                            <>
                                <div className="pill-grid-header">
                                    <div>üïí Gi·ªù</div>
                                    <div>üíä Thu·ªëc</div>
                                    <div>üì¶ Li·ªÅu l∆∞·ª£ng</div>
                                </div>
                                {treatmentPlan.pillRemindTimes.map((pill, index) => (
                                    <div key={index} className="pill-grid-row">
                                        <div>{pill.time}</div>
                                        <div>{pill.medicationName}</div>
                                        <div>{pill.drinkDosage} {pill.dosageMetric}</div>
                                    </div>
                                ))}
                            </>
                        ) : (
                            <p>Kh√¥ng c√≥ nh·∫Øc u·ªëng thu·ªëc n√†o.</p>
                        )}
                    </div>
                </>
            )}
        </div>
    );
}

export default TreatmentPlanInfoBox;
